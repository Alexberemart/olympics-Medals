<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">

    <!-- Allows us to use system properties as variables in this configuration
       file -->
    <bean class="com.alexberemart.core.config.AlexberemartPropertyPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="true"/>
        <property name="order" value="0"/>
        <property name="locations">
            <list>
                <value>classpath:com/alexberemart/olympicMedals/olympicMedals.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close">
        <property name="driverClassName" value="${tpv.datasource.driver}"/>
        <property name="url" value="${tpv.datasource.url}"/>
        <property name="username" value="${tpv.datasource.db.username}"/>
        <property name="password" value="${tpv.datasource.db.password}"/>
        <property name="testOnBorrow" value="true"/>
        <property name="validationQuery" value="${tpv.datasource.validationQuery}"/>
    </bean>

    <!-- Hibernate SessionFactory definition -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="hibernateProperties">
            <props>
                <prop key="javax.persistence.validation.mode">NONE</prop>
                <prop key="hibernate.dialect">${tpv.hibernate.dialect.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${tpv.hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${tpv.hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.use_sql_comments">true</prop>
                <prop key="hibernate.bytecode.use_reflection_optimizer">true</prop>
                <prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.query.substitutions">true 1, false 0</prop>
                <prop key="hibernate.generate_statistics">true</prop>
                <!--<prop key="hibernate.connection.useUnicode">true</prop>-->
                <!--<prop key="hibernate.connection.characterEncoding">utf8mb4</prop>-->
            </props>
        </property>
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="${tpv.sessionfactory.packagestoscan}"/>
    </bean>

    <!-- Hibernate templates definition -->
    <bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
        <property name="flushModeName" value="FLUSH_AUTO"/>
        <property name="allowCreate" value="true"/>
        <property name="alwaysUseNewSession" value="false"/>
        <property name="cacheQueries" value="false"/>
        <property name="queryCacheRegion" value="dcpQCR"/>
        <property name="maxResults" value="10000"/>
        <property name="fetchSize" value="10000"/>
    </bean>

    <!-- Local transaction manager for a single JDBC source by ussing Hibernate -->
    <bean id="transactionManagerTpv"
          class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref local="sessionFactory"/>
        </property>
    </bean>

    <bean id="resultDAOTarget"
          class="com.alexberemart.olympicMedals.model.dao.impl.ResultDAOImpl">
        <qualifier value="target"/>
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
    </bean>

    <bean id="resultDAO"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManagerTpv"/>
        <property name="target">
            <ref local="resultDAOTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="makePersistent">PROPAGATION_REQUIRED</prop>
                <prop key="find*">PROPAGATION_REQUIRED, readOnly</prop>
            </props>
        </property>
    </bean>

    <bean id="countryDAOTarget"
          class="com.alexberemart.olympicMedals.model.dao.impl.CountryDAOImpl">
        <qualifier value="target"/>
        <property name="hibernateTemplate" ref="hibernateTemplate"/>
    </bean>

    <bean id="countryDAO"
          class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
        <property name="transactionManager" ref="transactionManagerTpv"/>
        <property name="target">
            <ref local="countryDAOTarget"/>
        </property>
        <property name="transactionAttributes">
            <props>
                <prop key="makePersistent">PROPAGATION_REQUIRED</prop>
                <prop key="find*">PROPAGATION_REQUIRED, readOnly</prop>
            </props>
        </property>
    </bean>

</beans>